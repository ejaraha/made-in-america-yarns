distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "drop") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity)
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(data),collapse="\n"))
top_products_by_ym_user <- data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "drop") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
nest("top_products") %>%
# rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(data),collapse="\n"))
top_products_by_ym_user <- data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "drop") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(data),collapse="\n"))
top_products_by_ym_user <- data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "drop") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(data),collapse="\n"))
View(top_products_by_ym_user)
top_products_by_ym_user <- data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "drop") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(top_products),collapse="\n"))
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "drop") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "drop") %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity), .groups = "keep") %>%
ungroup() %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
nest(name) %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
nest(data=c(name)) %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
ungroup() %>%
nest(data=c(name)) %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
nest() %>% glimpse()
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>% glimpse()
top_products_by_ym_user <- data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
ugroup() %>%
group_by(order_ym) %>%
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(top_products),collapse="\n"))
top_products_by_ym_user <- data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
ungroup() %>%
group_by(order_ym) %>%
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(top_products),collapse="\n"))
data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
ungroup() %>%
group_by(order_ym) %>% glimpse()
top_products_by_ym_user <- data_denorm %>%
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_ym, product_id) %>%
# number of orders for each product_id/user_type/order_ym combo
summarize(n_orders = n(),
sum_quantity = sum(quantity),
name = max(name), .groups = "keep") %>%
group_by(order_ym) %>%
# find top three products by user_type/order_ym
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
filter(rank_orders %in% c(1,2,3)) %>%
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym, rank_orders, rank_quantity) %>%
ungroup() %>%
select(order_ym,
name) %>%
group_by(order_ym) %>%
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(top_products),collapse="\n"))
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, name, quantity) %>%
# get product-level info
group_by(order_ym, product_id) %>%
# most orders placed by year/mo
summarize(n_orders = n(),
# largest quantity purchased
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name), .groups = "keep") %>% glimpse()
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, name, quantity) %>%
# get product-level info
group_by(order_ym, product_id) %>%
# most orders placed by year/mo
summarize(n_orders = n(),
# largest quantity purchased
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name), .groups = "keep") %>% #glimpse()
group_by(order_ym) %>% glimpse()
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, name, quantity) %>%
# get product-level info
group_by(order_ym, product_id) %>%
# most orders placed by year/mo
summarize(n_orders = n(),
# largest quantity purchased
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name), .groups = "drop") %>% glimpse()
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, name, quantity) %>%
# get product-level info
group_by(order_ym, product_id) %>%
# most orders placed by year/mo
summarize(n_orders = n(),
# largest quantity purchased
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_ym) %>%
# rank n_orders and sum_quantity (1=most orders/largest quantity)
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
# get top three products by n_orders
filter(rank_orders %in% c(1,2,3)) %>%
# for repeat rank_orders, choose the record(s) with the largest quantity ordered
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym) %>%
ungroup() %>% glimpse()
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, name, quantity) %>%
# get product-level info
group_by(order_ym, product_id) %>%
# most orders placed by year/mo
summarize(n_orders = n(),
# largest quantity purchased
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_ym) %>%
# rank n_orders and sum_quantity (1=most orders/largest quantity)
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
# get top three products by n_orders
filter(rank_orders %in% c(1,2,3)) %>%
# for repeat rank_orders, choose the record(s) with the largest quantity ordered
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym) %>%
ungroup() %>%
group_by(across(.cols=!c(name))) %>% glimpse()
top_products_by_ym_user <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, name, quantity) %>%
# get product-level info
group_by(order_ym, product_id) %>%
# most orders placed by year/mo
summarize(n_orders = n(),
# largest quantity purchased
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_ym) %>%
# rank n_orders and sum_quantity (1=most orders/largest quantity)
mutate("rank_orders" = dense_rank(desc(n_orders)),
"rank_quantity" = dense_rank(desc(sum_quantity))) %>%
# get top three products by n_orders
filter(rank_orders %in% c(1,2,3)) %>%
# for repeat rank_orders, choose the record(s) with the largest quantity ordered
group_by(rank_orders, .add=TRUE) %>%
filter(rank_quantity == min(rank_quantity)) %>%
arrange(order_ym) %>%
ungroup() %>%
select(order_ym,
name) %>%
group_by(order_ym) %>%
nest() %>%
rename("top_products"=data)%>%
mutate(top_products = str_c(unlist(top_products),collapse="\n"))
glimpse(data_denorm)
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by()
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_y) %>%
summarise(sum(quantity))
glimpse(data_denorm)
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%glimpse()
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, order_y, order_m, name, quantity) %>%
group_by(order_y) %>%glimpse()
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, order_m, name, quantity) %>%
filter(is.na(quantity) ==FALSE)
group_by(order_m) %>%
summarise(sum(quantity))
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, order_m, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_m) %>%
summarise(sum(quantity))
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE)
glimpse(data_denorm)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_ym, order_m, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_m) %>%
summarise(sum(quantity))
data_denorm %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_m) %>%
summarise(sum(quantity))
data_denorm %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_month) %>%
summarise(sum(quantity))
data_denorm %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>% glimpse()
x <- ymd("2012-03-26")
week(x)
week(x) <- 1
week(x) <- 54
week(x) > 3
week
x
data_denorm %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_year, order_week) %>%
summarise(sum(quantity))
data_denorm %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, order_week, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_year, order_week) %>%
summarise(sum(quantity))
data_denorm %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, order_week, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_month, order_week) %>%
summarise(sum(quantity))
data_denorm %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, order_week, name, quantity) %>%
filter(is.na(quantity) ==FALSE) %>%
group_by(order_month, order_week) %>%
summarise("products_sold" = sum(quantity)) %>%
filter(products_sold >= 30)
