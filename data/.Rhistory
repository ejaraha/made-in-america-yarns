View(test)
data[grepl("cols", names(data))]
data_cols <- data[grepl("cols", names(data))]
View(data_cols)
data_cols <- lapply(data_cols, filter(keep==1))
data_cols <- data[grepl("cols", names(data))]
data_cols <- lapply(data_cols, function(x)filter(x, keep==1))
View(data_cols)
data_cols$role_cols
View(data_cols)
data_cols <- lapply(data_cols, function(x)filter(x, keep==1)%>%select(variable))
data_cols <- data[grepl("cols", names(data))]
data_cols <- lapply(data_cols, function(x)filter(x, keep==1)%>%select(variable))
View(data_cols)
df_list <- data
cols_df_list <- data[grepl("_cols", names(data))]
cols_df_list <- lapply(cols_df_list, function(x)filter(x, keep==1)%>%select(variable))
raw_df_list <- data[grepl("_raw", names(data))]
raw_drop_df_list <- append(cols_df_list, raw_df_list)
View(raw_drop_df_list)
View(raw_df_list)
cols_df_list <- arrange(grepl("_cols", names(data)))
cols_df_list <- sort(grepl("_cols", names(data)))
sort(grepl("_cols", names(data)))
names(data)
grepl("_cols", names(data))
names(data)grepl("_cols", names(data))
names(data)[grepl("_cols", names(data))]
match_names_df <- data.frame("cols" = sort(names(data)[grepl("_cols", names(data))]),
"data" = sort(names(data)[grepl("_raw", names(data))]))
View(match_names_df)
match_names_df <- data.frame("cols" = sort(names(data)[grepl("_cols", names(data))]),
"data" = sort(data[grepl("_raw", names(data))]))
match_names_df <- data.frame("cols" = sort(names(data)[grepl("_cols", names(data))]),
"data" = data[grepl("_raw", names(data))])
raw_df_list <- data[grepl("_raw", names(data))]
View(raw_df_list)
df_list <- data
cols_df_list <- data[grepl("_cols", names(data))]
cols_df_list <- lapply(cols_df_list,
function(x)
filter(x, keep==1) %>%
select(variable))
raw_df_list <- data[grepl("_raw", names(data))]
View(raw_df_list)
View(cols_df_list)
cols_df_list <- sort(data[grepl("_cols", names(data))])
help(order)
cols_df_list <- sort.list(data[grepl("_cols", names(data))])
cols_df_list <- order(data[grepl("_cols", names(data))])
cols_df_list <- data[grepl("_cols", names(data))]
test <- order(cols_df_list)
test <- sort.list(cols_df_list)
df_list <- data
cols_df_list <- data[grepl("_cols", names(data))]
cols_df_list <- cols_df_list[order(names(cols_df_list))]
cols_df_list <- cols_df_list[order(names(cols_df_list), decreasing=TRUE)]
raw_df_list <- raw_df_list[order(names(raw_df_list))]
raw_df_list <- data[grepl("_raw", names(data))]
raw_df_list <- raw_df_list[order(names(raw_df_list))]
cols_df_list[1]
cols_df_list[1]$variable
df_list <- data
#get data
cols_df_list <- data[grepl("_cols", names(data))]
#filter and select
cols_df_list <- lapply(cols_df_list,
function(x)
filter(x, keep==1) %>%
select(variable))
#reorder
cols_df_list <- cols_df_list[order(names(cols_df_list))]
cols_df_list[1]
raw_df_list <- data[grepl("_raw", names(data))]
raw_df_list <- raw_df_list[order(names(raw_df_list))]
test <- raw_df_list[1][cols_df_list[1]]
test <- raw_df_list[1]
View(test)
test <- raw_df_list[1] %>% select(cols_df_list[1])
test <- raw_df_list[1] %>% select(data.frame(cols_df_list[1]))
test <- raw_df_list[1] %>% select(as.data.frame(cols_df_list[1]))
test <- as.data.frame(raw_df_list[1]) %>% select(cols_df_list[1])
test <- as.data.frame(raw_df_list[1])
test <- as.data.frame(raw_df_list[1]) %>% select(as.data.frame(cols_df_list[1]))
as.data.frame(cols_df_list[1])
test <- as.data.frame(raw_df_list[1]) %>% select(as.data.frame(cols_df_list[1])$variable)
View(test)
test <- as.data.frame(raw_df_list[1])
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
#get data
cols_df_list <- data[grepl("_cols", names(data))]
#filter and select
cols_df_list <- lapply(cols_df_list,
function(x)
filter(x, keep==1) %>%
select(variable))
#reorder
cols_df_list <- cols_df_list[order(names(cols_df_list))]
View(cols_df_list)
View(cols_df_list)
raw_df_list <- data[grepl("_raw", names(data))]
raw_df_list <- raw_df_list[order(names(raw_df_list))]
View(raw_df_list)
test_df <- as.data.frame(raw_df_list[[1]])
View(test_df)
test <- as.data.frame(raw_df_list[1])
View(test)
test <- as.data.frame(raw_df_list[[1]])
View(test)
as.data.frame(cols_df_list[[1]])
as.data.frame(cols_df_list[[1]])$variable
test <- as.data.frame(raw_df_list[[1]]) %>% select(as.data.frame(cols_df_list[[1]])$variable)
test <- as.data.frame(raw_df_list[[1]]) %>% select(cols_df_list[[1]])
for (cdf in cols_df_list){
field_list <- as.data.frame(cdf)$variable
for (rdf in raw_df_list){
df <- as.data.frame(rdf)
}
}
View(cdf)
View(rdf)
for (cdf in cols_df_list){
field_list <- cdf$variable
for (rdf in raw_df_list){
}
}
raw_drop_df_list <- list()
for (cdf in cols_df_list){
field_list <- cdf$variable
for (rdf in raw_df_list){
raw_drop_df <- rdf %>% select(field_list)
raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
df_list <- data
# get data
cols_df_list <- data[grepl("_cols", names(data))]
raw_df_list <- data[grepl("_raw", names(data))]
# filter and select cols_df_list
cols_df_list <- lapply(cols_df_list,
function(x)
filter(x, keep==1) %>%
select(variable))
# order list objects alphabetically in prep to loop
cols_df_list <- cols_df_list[order(names(cols_df_list))]
raw_df_list <- raw_df_list[order(names(raw_df_list))]
# initialize df list
raw_drop_df_list <- list()
for (cdf in cols_df_list){
field_list <- cdf$variable
for (rdf in raw_df_list){
raw_drop_df <- rdf %>% select(field_list)
raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
# get data
cols_df_list <- data[grepl("_cols", names(data))]
raw_df_list <- data[grepl("_raw", names(data))]
# filter and select cols_df_list
cols_df_list <- lapply(cols_df_list,
function(x)
filter(x, keep==1) %>%
select(variable))
# order list objects alphabetically in prep to loop
cols_df_list <- cols_df_list[order(names(cols_df_list))]
raw_df_list <- raw_df_list[order(names(raw_df_list))]
# initialize df list
raw_drop_df_list <- list()
for (cdf in cols_df_list){
field_list <- cdf$variable
for (rdf in raw_df_list){
raw_drop_df <- rdf %>% select(field_list)
raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf$variable
for (rdf in raw_df_list){
raw_drop_df <- rdf %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
View(rdf)
head(field_list)
View(cols_df_list)
View(raw_df_list)
for (cdf in cols_df_list){
field_list <- cdf$variable
for (rdf in raw_df_list){
df <- rdf
raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
for (rdf in raw_df_list){
field_list <- cdf$variable
df <- rdf
raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
for (rdf in raw_df_list){
field_list <- cdf$variable
print("1")
df <- rdf
print("2")
raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
for (rdf in raw_df_list){
field_list <- cdf$variable
print(cdf)
df <- rdf
print(rdf)
raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
for (rdf in raw_df_list){
field_list <- cdf$variable
glimpse(cdf)
df <- rdf
glimpse(rdf)
raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf
glimpse(cdf)
for (rdf in raw_df_list){
df <- rdf
head(rdf[5,])
#raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf
glimpse(cdf)
for (rdf in raw_df_list){
df <- rdf
rdf[5,]
#raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf
glimpse(cdf)
for (rdf in raw_df_list){
df <- rdf
head(df)
#raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf
glimpse(cdf)
for (rdf in raw_df_list){
df <- rdf
print(names(df))
#raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf
glimpse(cdf)
for (rdf in raw_df_list){
df <- rdf
print(head(names(df)))
#raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf
print("cdf")
glimpse(cdf)
for (rdf in raw_df_list){
df <- rdf
print("rdf")
print(head(names(df)))
#raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for (cdf in cols_df_list){
field_list <- cdf
print("cdf")
glimpse(cdf)
for (rdf in raw_df_list){
df <- as.data.frame(rdf)
print("rdf")
print(head(names(df)))
#raw_drop_df <- df %>% select(field_list)
#raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
}
for(j in 1:3){
print(j)
for (b in 4:6){
print(b)
}
}
for(j in 1:3){
print(j)
for (b in c("a","b","c")){
print(b)
}
}
for(j in 1:3){
for (b in c("a","b","c")){
print(j)
print(b)
}
}
for(j in 1:3){
j <- j
for (b in c("a","b","c")){
print(j)
print(b)
}
}
for(j in 1:3){
for (b in c("a","b","c")){
print(b)
}
print(j)
}
for(j in 1:3){
for (b in c("a","b","c")){
j <- j
b <- b
print(b)
print(j)
}
}
raw_drop_df <- data.frame("field"=cols_df_list,
"data"=raw_df_list)
raw_drop_list <- list("field"=cols_df_list,
"data"=raw_df_list)
View(raw_drop_df_list)
raw_drop_list <- list("field"=cols_df_list[[1]],
"data"=raw_df_list[[1]])
View(raw_drop_list)
raw_df_list <- map2(raw_df_list[[1]], cols_df_list[[1]], function(x,y)x%>% select(y))
library(prrr)
library(purrr)
raw_df_list <- map2(raw_df_list[[1]], cols_df_list[[1]], function(x,y)x%>% select(y))
cols_df_list[[1]]
cols_df_list[[1]]$variable
raw_df_list <- map2(raw_df_list[[1]], cols_df_list[[1]]$variable, function(x,y)x%>% select(y))
length(raw_df_list)
for(i in 1:length(raw_df_list)){
fields <- cols_df_list[[i]]$variable
df <- raw_df_list[[i]]
}
View(data)
for(i in 1:length(raw_df_list)){
fields <- cols_df_list[[i]]$variable
df <- raw_df_list[[i]]
raww_drop_df <- df %>%
select(fields)
}
for(i in 1:length(raw_df_list)){
fields <- cols_df_list[[i]]$variable
df <- raw_df_list[[i]]
raww_drop_df <- df %>%
select(all_of(fields))
}
View(raww_drop_df)
# initialize df list
raw_drop_df_list <- list()
for(i in 1:length(raw_df_list)){
fields <- cols_df_list[[i]]$variable
df <- raw_df_list[[i]]
raw_drop_df <- df %>%
select(all_of(fields))
raw_drop_df_list <- append(raw_drop_df)
}
# initialize df list
raw_drop_df_list <- list()
for(i in 1:length(raw_df_list)){
fields <- cols_df_list[[i]]$variable
df <- raw_df_list[[i]]
raw_drop_df <- df %>%
select(all_of(fields))
raw_drop_df_list <- append(raw_drop_df_list, raw_drop_df)
}
View(raw_drop_list)
View(raw_drop_df_list)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
cols_df_list <- data[grepl("_cols", names(data))]
raw_df_list <- data[grepl("_raw", names(data))]
# filter and select cols_df_list
cols_df_list <- lapply(cols_df_list,
function(x)
filter(x, keep==1) %>%
select(variable))
# order list objects alphabetically in prep to loop
cols_df_list <- cols_df_list[order(names(cols_df_list))]
raw_df_list <- raw_df_list[order(names(raw_df_list))]
# initialize df list
raw_drop_df_list <- list()
# initialize df list
raw_drop_df_list <- list()
for(i in 1:length(raw_df_list)){
fields <- cols_df_list[[i]]$variable
df <- raw_df_list[[i]]
raw_drop_df <- df %>%
select(all_of(fields))
raw_drop_df_list[[i]] <- raw_drop_df
}
View(raw_drop_df_list)
names(raw_drop_df_list) <- lapply(names(raw_df_list), function(x)paste(x, "_drop", sep=""))
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
# drop unnecessary fields from raw data
#--------------------------------------------------------------
data <- append(data, drop_cols())
test <- drop_cols()
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
test <- drop_cols()
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
test <- drop_cols()
View(test)
test_data <- append(data, test)
View(test_data)
## add the _raw_drop files to the data list
data <- append(data, drop_cols())
clean_product_main <- function(df){
df <- data$product_main
df <- df %>%
# isolate name field to group products by name and assign a unique id to each group
separate(Name, into=c("Name", "Attribute.all"), sep="-", extra="merge", fill="right") %>%
mutate(Name = str_trim(Name)) %>%
group_by(Name) %>%
mutate("product_group"=cur_group_id()) %>%
ungroup()
return(df)
}
data$product_main <- clean_product_main()
glimpse(data$product_main)
clean_product_main <- function(df){
df <- data$product_main
df <- df %>%
# isolate name field to group products by name and assign a unique id to each group
separate(name, into=c("name", "attribute.all"), sep="-", extra="merge", fill="right") %>%
mutate(name = str_trim(name)) %>%
group_by(name) %>%
mutate("product_group"=cur_group_id()) %>%
ungroup()
return(df)
}
data$product_main <- clean_product_main()
glimpse(data$product_main)
clean_product_main <- function(df){
df <- data$product_main
df <- df %>%
# isolate name field to group products by name and assign a unique id to each group
separate(name, into=c("name", "attribute.all"), sep="-", extra="merge", fill="right") %>%
select(-attribute.all) %>%
mutate(name = str_trim(name)) %>%
group_by(name) %>%
mutate("product_group"=cur_group_id()) %>%
ungroup()
return(df)
}
data$product_main <- clean_product_main()
glimpse(data$product_main)
