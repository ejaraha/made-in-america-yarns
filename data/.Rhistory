order <- read.csv("C:\Users\sjara\Downloads\wc_order.csv")
order <- read.csv("C:/Users/sjara/Downloads/wc_order.csv")
glimpse(order)
head(order)
install.packages(tidyverse)
install.packages("tidyverse")
glimpse(order)
library(dplyr)
glimpse(order)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$order_coupon, by="order_id") %>%
left_join(data_norm$order_usage, by="order_id") %>% glimpse()
test <- lapply(data_norm, FUN = function(x){mutate(across(.cols = contains("_id"), as.character))})
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$order_coupon, by="order_id") %>%
left_join(data_norm$order_usage, by="order_id") %>% glimpse()
data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id") %>%
left_join(data_norm$product_yarn_weight, by="product_id") %>%
left_join(data_norm$product_effect, by="product_id") %>% glimpse()
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id") %>%
left_join(data_norm$product_yarn_weight, by="product_id") %>%
left_join(data_norm$product_effect, by="product_id") %>% glimpse()
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id") %>%
left_join(data_norm$product_yarn_weight, by="product_id") %>%
left_join(data_norm$product_effect, by="product_id") %>% glimpse()
product <- data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id"))
product <- data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id")
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id") %>%
left_join(data_norm$product_yarn_weight, by="product_id") %>%
left_join(data_norm$product_effect, by="product_id") %>% glimpse()
product <- data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id") %>%
left_join(data_norm$product_yarn_weight, by="product_id") %>%
left_join(data_norm$product_effect, by="product_id")
glimpse(order)
order_denorm <- data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$order_coupon, by="order_id") %>%
left_join(data_norm$order_usage, by="order_id")
product_denorm <- data_norm$product %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id") %>%
left_join(data_norm$product_yarn_weight, by="product_id") %>%
left_join(data_norm$product_effect, by="product_id")
glimpse(order_denorm)
glimpse(product_denorm)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
glimpse(data_denorm$order)
glimpse(data_denorm$product)
View(data)
View(data_norm)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
#lapply(data, check_empty)
# denormalize data
#-------------------------------------------------------------
data_denorm <- denormalize(data_norm)
# export denormalized tables
#-------------------------------------------------------------
# export_data(data_norm, data_denorm)
# export denormalized tables
#-------------------------------------------------------------
export_data(data_norm, data_denorm)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
# export denormalized tables
#-------------------------------------------------------------
export_data(data_norm, data_denorm)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
data_norm$product_hue %>% glimpse()
data_norm$product %>%
left_join(df_list$product_hue,
by = c("product_id", "variation_id")) %>% glimpse()
data_norm$product %>%
left_join(data_norm$product_hue,
by = c("product_id", "variation_id")) %>% glimpse()
data_norm$product %>%
left_join(data_norm$product_hue,
by = c("product_id", "variation_id")) %>%
rename("name" = name.x,
"color" = color.x) %>% glimpse()
data_norm$product %>%
left_join(data_norm$product_hue,
by = c("product_id", "variation_id")) %>%
rename("name" = name.x,
"color" = color.x) %>%
select(product_id,
variation_id,
name,
color,
hue)  %>% glimpse()
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
#lapply(data, check_empty)
# denormalize data
#-------------------------------------------------------------
data_denorm <- denormalize(data_norm)
df_list <- data
df_list$product_hue %>% glimpse()
df_list$product_hue <- df_list$product_hue %>%
mutate(across(.cols = contains("_id"), as.character))
data_norm <- list()
df_list$product %>%
left_join(df_list$product_hue,
by = c("product_id", "variation_id")) %>% glimpse()
View(df_list)
df_list$product %>% glimpse()
View(df_list)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
#lapply(data, check_empty)
# denormalize data
#-------------------------------------------------------------
data_denorm <- denormalize(data_norm)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# update data
#-------------------------------------------------------------
data <- update()
# normalize data
#-------------------------------------------------------------
data_norm <- normalize(data)
# check primary keys
#-------------------------------------------------------------
check_primary_keys(primary_key_list())
#lapply(data, check_empty)
# denormalize data
#-------------------------------------------------------------
data_denorm <- denormalize(data_norm)
# export denormalized tables
#-------------------------------------------------------------
export_data(data_norm, data_denorm)
