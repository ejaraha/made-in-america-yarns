order <- read.csv("C:\Users\sjara\Downloads\wc_order.csv")
order <- read.csv("C:/Users/sjara/Downloads/wc_order.csv")
glimpse(order)
head(order)
install.packages(tidyverse)
install.packages("tidyverse")
glimpse(order)
library(dplyr)
glimpse(order)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
View(data)
write.csv(data$role_raw_drop, "raw_main.csv", row.names=FALSE)
df_list <- data
main_df_list <- data[grepl("_main", names(data))]
test <- main_df_list[order(names(data))]
View(main_df_list)
View(test)
test <-order(names(data))
test
main_df_list[order(names(main_df_list))]
test <- main_df_list[order(names(main_df_list))]
View(test)
View(main_df_list)
View(test)
df_list <- data
main_df_list <- data[grepl("_main", names(data))]
test <- main_df_list[order(names(main_df_list))]
View(main_df_list)
View(test)
View(df_list)
library(dplyr)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
## add the _raw_drop files to the data list
data <- append(data, drop_cols())
df_list <- data
main_df_list <- data[grepl("_main", names(data))]
test <- main_df_list[order(names(main_df_list))]
View(test)
View(main_df_list)
main_df_list <- data[order(grepl("_main", names(data)))]
df_list <- data
main_df_list <- data[order(grepl("_main", names(data)))]
raw_drop_df_list <- data[order(drepl("_raw_drop", names(data)))]
for (i in 1:length(df_list)){
id <- grepl("id", names(main_df_list[[i]]))
rows_upsert(main_df_list[[i]], raw_drop_df_list[[i]], by=id)
}
id <- names(main_df_list[[i]][1])
id <- names(main_df_list[[1]][1])
names(main_df_list[[1]])
View(main_df_list)
main_df_list <- data[order(grepl("_main", names(data)))]
View(main_df_list)
df_list <- data
main_df_list <- df_list[order(grepl("_main", names(df_list)))]
raw_drop_df_list <- df_list[order(grepl("_raw_drop", names(df_list)))]
for (i in 1:length(df_list)){
id <- names(main_df_list[[1]])
rows_upsert(main_df_list[[i]], raw_drop_df_list[[i]], by=id)
}
df_list <- data
main_df_list <- df_list[order(grepl("_main", names(df_list)))]
raw_drop_df_list <- df_list[order(grepl("_raw_drop", names(df_list)))]
for (i in 1:length(df_list)){
id <- grepl("id", names(main_df_list[[i]]))
rows_upsert(main_df_list[[i]], raw_drop_df_list[[i]], by=id)
}
View(main_df_list)
main_df_list <- df_list[grepl("_main", names(df_list))]
raw_drop_df_list <- df_list[grepl("_raw_drop", names(df_list))]
for (i in 1:length(df_list)){
id <- grepl("id", names(main_df_list[[i]]))
rows_upsert(main_df_list[[i]], raw_drop_df_list[[i]], by=id)
}
main_df_list <- df_list[grepl("_main", names(df_list))][order(names(df_list))]
main_df_list <- df_list[grepl("_main", names(df_list))]
grepl("_raw", names(df_list))
cols_df_list <- sort(cols_df_list)
# split df_list into two lists
## cols: dfs of column names and boolean field of keep or not keep
cols_df_list <- df_list[grepl("_cols", names(df_list))]
# order lists alphabetically in prep to loop
cols_df_list <- sort(cols_df_list)
order(cols_df_list)
order(names(cols_df_list))
sort(names(cols_df_list))
test <- data.frame("product_cols"=1, "role_cols"=2, "order_cols"="f")
test
test[sort(names(cols_df_list))]
test[order(names(cols_df_list))]
sort_cols <- function(df, decrease = FALSE){
T_F <- as.logical(decrease)
df <- df[sort(names(df), decreasing = T_F)]
return(df)
}
test
sort_cols(test)
sort_cols(test, decrease = TRUE)
cols_df_list <- df_list[grepl("_cols", names(df_list))] %>% sort_cols()
View(cols_df_list)
test %>% sort_cols()
View(main_df_list)
View(raw_drop_df_list)
testl <- list(a,b,c)
testl <- list("a", "b", "c")
names(testl) <- c("ya", "yi", "yo")
testl
names(testl) <- c("yo", "ai", "he")
testl %>% sort_cols(testl)
testl %>% sort_cols(testl, decrease = TRUE)
testl %>% sort_cols()
names(main_df_list[[i]])grepl("id", names(main_df_list[[i]]))
for (i in 1:length(df_list)){
id <- names(main_df_list[[i]])grepl("id", names(main_df_list[[i]]))
rows_upsert(main_df_list[[i]], raw_drop_df_list[[i]], by=id)
}
id <- names(main_df_list[[1]])[grepl("id", names(main_df_list[[1]]))]
id
names(main_df_list[[2]])[grepl("id", names(main_df_list[[2]]))]
names(main_df_list[[3]])[grepl("id", names(main_df_list[[3]]))]
names(main_df_list[[1]])[grepl("[order_id|id]", names(main_df_list[[1]]))]
names(main_df_list[[1]])[grepl("order_id|id", names(main_df_list[[1]]))]
names(main_df_list[[1]])[grepl("order_id|^id$", names(main_df_list[[1]]))]
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
# drop unnecessary fields from raw data
#--------------------------------------------------------------
## add the _raw_drop files to the data list
data <- append(data, drop_cols())
View(data)
#--------------------------------------------------------------
data <- import_data()
# drop unnecessary fields from raw data
#--------------------------------------------------------------
## add the _raw_drop files to the data list
data <- append(data, drop_cols())
glimpse(data$role_main)
check_empty <- function(df){
#checks every column in df for NAs and ""
df <- data.frame("any_nas" = apply(df, 2, function(df) any(is.na(df))),
"any_empty_character_vectors" = apply(df, 2, function(df) any(df == "", na.rm = TRUE)))
return(df)
}
check_empty(data$role_main)
glimpse(data$product_main)
glimpse(data$order_main)
# clean main data
#--------------------------------------------------------------
data$order_main <- clean_order_main()
glimpse(data$order_main)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
# drop unnecessary fields from raw data
#--------------------------------------------------------------
## add the _raw_drop files to the data list
data <- append(data, drop_cols())
# update main data with  data
#--------------------------------------------------------------
## update matching rows from order_main to match order
## & insert non-matching ids from order_raw_drop into order_main
data$order_main <- rows_upsert(data$order_main, data$order_raw_drop, by="order_id")
## update matching rows from product_main to match product
## & insert non-matching rows from product_raw_drop to product_main
data$product_main <- rows_upsert(data$product_main,data$product_raw_drop, by="id")
## update matching rows from role_main to match role
## & insert non-matching rows from role_raw_drop to role_main
data$role_main <- rows_upsert(data$role_main, data$role_raw_drop, by="id")
# clean main data
#--------------------------------------------------------------
data$order_main <- clean_order_main()
glimpse(data$order_main)
data$product_main <- clean_product_main()
glimpse(data$product_main)
glimpse(data$order_main)
library(dplyr)
library(tidyr)
library(lubridate)
library(stringr)
library(purrr)
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
# import all data
#--------------------------------------------------------------
data <- import_data()
# drop unnecessary fields from raw data
#--------------------------------------------------------------
## add the _raw_drop files to the data list
data <- append(data, drop_cols())
# update main data with  data
#--------------------------------------------------------------
## update matching rows from order_main to match order
## & insert non-matching ids from order_raw_drop into order_main
data$order_main <- rows_upsert(data$order_main, data$order_raw_drop, by="order_id")
## update matching rows from product_main to match product
## & insert non-matching rows from product_raw_drop to product_main
data$product_main <- rows_upsert(data$product_main,data$product_raw_drop, by="id")
## update matching rows from role_main to match role
## & insert non-matching rows from role_raw_drop to role_main
data$role_main <- rows_upsert(data$role_main, data$role_raw_drop, by="id")
# clean main data
#--------------------------------------------------------------
data$order_main <- clean_order_main()
glimpse(data$order_main)
data$product_main <- clean_product_main()
glimpse(data$product_main)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
check_empty(data$role_main)
glimpse(data$role_main)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
glimpse(data$role_raw_drop)
