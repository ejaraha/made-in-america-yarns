summarize(n_orders = n(),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>%
filter(rank %in% c(1,2,3)) %>%
count(name) %>%
glimpse()
source('C:/Users/sjara/git/made-in-america-yarns/scratch.R', echo=TRUE)
View(test)
source('C:/Users/sjara/git/made-in-america-yarns/scratch.R', echo=TRUE)
data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = n(),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>%
filter(rank %in% c(1,2,3)) %>% glimpse()
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = n(),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>%
filter(rank %in% c(1,2,3)) %>% glimpse()
View(test)
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = n(),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>% glimpse()
View(test)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id, variation_id")) %>% glimpse()
data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id", "variation_id")) %>% glimpse()
test <- data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id", "variation_id")) %>% glimpse()
data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id", "variation_id")) %>%
filter(product_id == "21095")
test <- data_norm$order %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id", "variation_id")) %>%
filter(product_id == "21095")
View(test)
test <- data_norm$order %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id", "variation_id"))
test <- data_norm$order %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id", "variation_id")) %>%
filter(product_id == "21095",
order_month ==1)
test <- data_norm$order %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date)) %>%
left_join(data_norm$order_product, by="order_id") %>%
left_join(data_norm$product, by=c("product_id", "variation_id")) %>%
filter(product_id == "21095",
order_month ==1) %>%
mutate(sum(quantity))
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name,color, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = length(unique(order_id)),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>% glimpse()
filter(rank %in% c(1,2,3)) %>%
ungroup() %>%
count(name) %>%
glimpse()
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name,color, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = length(unique(order_id)),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>% glimpse()
filter(rank %in% c(1,2,3)) %>%
ungroup() %>%
count(name) %>%
glimpse()
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = length(unique(order_id)),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>% glimpse()
filter(rank %in% c(1,2,3)) %>%
ungroup() %>%
count(name) %>%
glimpse()
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name,color, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = n(),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>% glimpse()
filter(rank %in% c(1,2,3)) %>%
ungroup() %>%
count(name) %>%
glimpse()
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name,color, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = length(unique(order_id)),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>%
filter(rank %in% c(1,2,3)) %>%
ungroup() %>%
count(name) %>%
glimpse()
# get data
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE)
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name,color, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = length(unique(order_id)),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n()) %>%
filter(rank %in% c(1,2,3)) %>%
ungroup() %>%
count(name) %>%
glimpse()
test <- data_denorm %>%
# get order-level data and all necessary fields
distinct(order_id, product_id, order_year, order_month, name,color, quantity) %>%
# get item-level info
group_by(order_year, order_month, product_id) %>%
# n_orders = orders placed by year/mo
summarize(n_orders = length(unique(order_id)),
# sum_quantity = number purchased per period
sum_quantity = sum(quantity),
# need this so "name" won't be dropped
name = max(name),
# change grouping
.groups = "drop") %>%
group_by(order_year, order_month) %>%
arrange(desc(n_orders, sum_quantity)) %>%
mutate("rank" = 1:n())
View(test)
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
# to do: test row counts and groupings against wpAdmin
setwd("C:/Users/sjara/git/made-in-america-yarns/data")
source("C:/Users/sjara/git/made-in-america-yarns/functions.R")
# get data
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE)
data_denorm %>% distinct(order_id, product_id,variation_id, order_year, name, color, quantity, effect) %>% filter(is.na(effect)==TRUE)
data_denorm %>% distinct(order_id, product_id,variation_id, order_year, name, color, quantity, fiber) %>% filter(is.na(fiber)==TRUE)
data_denorm %>% distinct(order_id, product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(is.na(yarn_weight)==TRUE)
glimpse(data$product_main)
data$product_main %>% filter(type=="simple")
data$product_main %>% filter(type=="simple") %>% glimpse()
data_denorm %>% filter(product_id == "22323")
data_denorm %>% distinct(order_id, product_id,variation_id, order_year, name, color, quantity, fiber) %>% filter(is.na(fiber)==TRUE)
data_denorm %>% distinct(order_id, product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(is.na(yarn_weight)==TRUE)
data_denorm %>% distinct(order_id, product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(is.na(yarn_weight)==TRUE) %>% select(-quantity) %>%distinct()
data_denorm %>% distinct(product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(is.na(yarn_weight)==TRUE) %>% select(-quantity) %>%distinct()
data_denorm %>% distinct(product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(is.na(yarn_weight)==FALSE, variation_id =="1111") %>% select(-quantity) %>%distinct()
data_denorm %>% distinct(product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(variation_id =="1111") %>% select(-quantity) %>%distinct()
data_denorm %>% distinct(product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(variation_id =="1111") %>% select(-quantity) %>%distinct() %>% arrange(name)
source('C:/Users/sjara/git/made-in-america-yarns/scratch.R', echo=TRUE)
View(data_denorm)
View(data_denorm)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
data_denorm %>% distinct(product_id,variation_id, order_year, name, color, quantity, yarn_weight) %>% filter(variation_id =="1111") %>% select(-quantity) %>%distinct() %>% arrange(name)
data_denorm %>% distinct(product_id,variation_id, name, color, quantity, yarn_weight) %>% filter(variation_id =="1111") %>% select(-quantity) %>%distinct() %>% arrange(name)
data_norm$order_product %>%
left_join(data_norm$order, by="order_id") %>%
left_join(data_norm$order_coupon, by="order_id") %>%
left_join(data_norm$order_usage, by="order_id") %>%
# [2] rejoin product data
left_join(data_norm$product, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_hue, by=c("product_id"="product_id", "variation_id"="variation_id")) %>%
left_join(data_norm$product_fiber, by="product_id") %>%
left_join(data_norm$product_yarn_weight, by="product_id") %>%
left_join(data_norm$product_effect, by="product_id") %>%
rename("name"=name.x,
"color"=color.x)%>%
select(-c(name.y, color.y)) %>% filter(is.na(yarn_weight)==TRUE)
data_norm$product_yarn_weight %>% glimpse()
test <- data_norm$product_yarn_weight
View(test)
data_norm$order_product %>% anti_join(data_norm$product_yarn_weight, by=product_id) %>% glimpse()
help("anti_join")
data_norm$order_product %>% anti_join(data_norm$product_yarn_weight, by="product_id") %>% glimpse()
test <- data_norm$order_product %>% anti_join(data_norm$product_yarn_weight, by="product_id")
View(test)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
data_norm$product_fiber %>% filter(type == simple) %>% glimpse()
data_norm$product_fiber %>% filter(type == "simple") %>% glimpse()
data_norm$product_main %>% filter(type == "simple") %>% glimpse()
data$product_main %>% filter(type == "simple") %>% glimpse()
product_category <- data$product_main %>%
mutate("fiber" = str_extract_all(categories, "(?<=fiber > )[^,]*"),
"yarn_weight" = str_extract_all(categories, "(?<=yarn weight > )[^,]*"),
"effect" = str_extract_all(categories, "(?<=effect > )[^,]*"),
"hue" = str_extract_all(categories, "(?<=hue > )[^,]*"),
"big_cones" = str_detect(categories, "big cones"),
"spools" = str_detect(categories, "spools"),
id = as.character(id))
product_category %>% glimpse()\
product_category %>% glimpse()
product_category <- data$product_main %>%  #df_list$product_main %>%
mutate("fiber" = str_extract_all(categories, "(?<=fiber > )[^,]*"),
"yarn_weight" = str_extract_all(categories, "(?<=yarn weight > )[^,]*"),
"effect" = str_extract_all(categories, "(?<=effect > )[^,]*"),
"hue" = str_extract_all(categories, "(?<=hue > )[^,]*"),
"big_cones" = case_when(str_detect(categories, "big cones")==TRUE ~"big cones",
TRUE ~ NA_character_),
"spools" = case_when(str_detect(categories, "spools")==TRUE ~"spools",
TRUE ~ NA_character_),
id = as.character(id))
product_category %>% glimpse()
product_category %>% filter(type=="simple") %>% glimpse()
product_category %>% filter(type=="simple") %>% filter(is.na(yarn_weight) ==TRUE) %>% glimpse()
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
product_category <- data$product_main %>%  #df_list$product_main %>%
mutate("fiber" = str_extract_all(categories, "(?<=fiber > )[^,]*"),
"yarn_weight" = str_extract_all(categories, "(?<=yarn weight > )[^,]*"),
"effect" = str_extract_all(categories, "(?<=effect > )[^,]*"),
"hue" = str_extract_all(categories, "(?<=hue > )[^,]*"),
"big_cones" = case_when(str_detect(categories, "big cones")==TRUE ~"big cones",
TRUE ~ NA_character_),
"spools" = case_when(str_detect(categories, "spools")==TRUE ~"spools",
TRUE ~ NA_character_),
id = as.character(id))
glimpse(product_category)
product_category %>% left_join(data_norm$product_fiber, by="product_id") %>% filter(type=="simple") %>% glimpse()
product_category %>% left_join(data_norm$product_fiber, by=c("product_id"="id")) %>% filter(type=="simple") %>% glimpse()
product_category %>% left_join(data_norm$product_fiber, by=c("id"="product_id")) %>% filter(type=="simple") %>% glimpse()
product_category %>% left_join(data_norm$product_fiber, by=c("id"="product_id")) %>% filter(type=="simple", is.na(yarn_weight)==TRUE)
data_norm$product_fiber %>% glimpse()
data_norm$product_fiber %>% filter(is.na(fiber)==TRUE) %>% glimpse()
data_norm$product_fiber %>% filter(is.na(yarn_weigth)==TRUE) %>% glimpse()
data_norm$product_fiber %>% filter(is.na(yarn_weight)==TRUE) %>% glimpse()
product_category %>% left_join(data_norm$product_fiber, by=c("id"="product_id")) %>% filter(type=="simple", is.na(fiber)==TRUE)
product_category %>% left_join(data_norm$product_fiber, by=c("id"="product_id")) %>% filter(type=="simple", is.na(fiber.x)==TRUE)
product_category %>% anti_join(data_norm$fiber, by=c("id"="product_id")) %>% glimpse()
dnf <- data_norm$product_fiber
product_category %>% anti_join(dnf, by=c("id"="product_id")) %>% glimpse()
product_category %>% anti_join(dnf, by=c("id"="product_id")) %>% filter(type != variation) %>% glimpse()
product_category %>% anti_join(dnf, by=c("id"="product_id")) %>% filter(type != "variation") %>% glimpse()
test <- product_category %>% anti_join(dnf, by=c("id"="product_id")) %>% filter(type != "variation") %>% glimpse()
View(test)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
glimpse(data$product_main)
glimpse(data$product_main) %>% filter(type=="simple") %>% glimpse()
data$product_main %>% filter(type=="simple") %>% glimpse()
product_category <- data$product_main %>% #df_list$product_main %>%
mutate("fiber" = str_extract_all(categories, "(?<=fiber > )[^,]*"),
"yarn_weight" = str_extract_all(categories, "(?<=yarn weight > )[^,]*"),
"effect" = str_extract_all(categories, "(?<=effect > )[^,]*"),
"hue" = str_extract_all(categories, "(?<=hue > )[^,]*"),
"big_cones" = case_when(str_detect(categories, "big cones")==TRUE ~"big cones",
TRUE ~ NA_character_),
"spools" = case_when(str_detect(categories, "spools")==TRUE ~"spools",
TRUE ~ NA_character_),
id = as.character(id))
product_category %>% glimpse90
product_category %>% glimpse()
product_category %>% filter(type=="simple") %>% glimpse()
product_category %>% filter(type=="simple" & is.na(fiber)==TRUE) %>% glimpse()
product_category %>% filter(type=="simple" & is.na(fiber)==TRUE) %>% glimpse()
data_norm$fiber %>% glimpse()
data_norm$product_fiber %>% glimpse()
data_norm$product_fiber %>% filter(is.na(fiber)==TRUE) %>% glimpse()
data_norm$product_fiber["fiber"] %>% filter(is.na(fiber)==TRUE)
data_norm$product_fiber%>% filter(is.na(fiber)==TRUE)) %>% select(fiber)
data_norm$product_fiber%>% filter(is.na(fiber)==TRUE) %>% select(fiber)
data_norm$product_fiber["product_id"] %>% filter(is.na(fiber)==TRUE)
data_norm$product_fiber %>% filter(is.na(fiber)==TRUE) %>% select(product_id)
fiber_na <- data_norm$product_fiber %>% filter(is.na(fiber)==TRUE) %>% select(product_id)
data_norm$product_fiber%>% filter(is.na(yarn_weight)==TRUE) %>% glimpse()
data_norm$product_yarn_weight%>% filter(is.na(yarn_weight)==TRUE) %>% glimpse()
data_norm$product %>% filter(product_id %in% fiber_na)
data_norm$order_product %>% filter(product_id %in% fiber_na)
data_norm$order_product %>% filter(product_id == "22215")
glimpse(data_denorm)
data_denorm %>% filter(is.na(fiber)==TRUE) %>% glimpse()
test <- data_denorm %>% filter(is.na(fiber)==TRUE)
View(test)
test <- data_denorm %>% filter(is.na(yarn_weight)==TRUE)
test <- data_denorm %>% filter(is.na(fiber)==TRUE)
test_ym <- data_denorm %>% filter(is.na(yarn_weight)==TRUE)
View(test_ym)
test_ym <- data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(name, color)
test_ym <- data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id)
View(test_ym)
data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id)
data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id, name)
%notin% <- Negate("%in%")
"%notin%" <- Negate("%in%")
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
source('C:/Users/sjara/git/made-in-america-yarns/update_db.r', echo=TRUE)
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id, name)
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE | product_id %notin% c("2985", "19963", "19955", "3263"))
"%notin%" <- Negate("%in%")
# get data
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE | product_id %notin% c("2985", "19963", "19955", "3263"))
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id, name)
# get data
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE | product_id != "3263")
data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id, name)
# get data
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE | product_id == "3263")
data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id, name)
# get data
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE,
product_id == "3263")
# get data
data_denorm <- read.csv("denormalized.csv", stringsAsFactors = FALSE) %>%
mutate("order_year" = year(order_date),
"order_month" = month(order_date),
"order_week" = week(order_date),
color = case_when(variation_id == "1111" ~"simple",
TRUE ~ color)) %>%
# replace NA values in usage & effect with "unassigned" so that filtering will work
mutate(across(c(meta.yarn_usage, effect), ~case_when(is.na(.x)==TRUE ~"unassigned",
TRUE ~ as.character(.x)))) %>%
# handle strange missing data
filter(is.na(quantity)==FALSE,
product_id != "3263")
data_denorm %>% filter(is.na(yarn_weight)==TRUE) %>% distinct(product_id, name)
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
runApp('C:/Users/sjara/git/made-in-america-yarns/miay-order-explorer')
